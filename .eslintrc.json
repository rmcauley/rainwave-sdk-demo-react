{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "sourceType": "module",
    "ecmaVersion": 2019,
    "project": "tsconfig.json",
    "ecmaFeatures": {
      "jsx": true
    }
  },

  "plugins": ["@typescript-eslint", "import", "react", "react-hooks"],

  "settings": {
    "react": {
      "version": "detect"
    }
  },

  "env": {
    "browser": true,
    "node": false
  },

  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:import/typescript",
    "prettier/react",
    "prettier/@typescript-eslint"
  ],

  "rules": {
    "@typescript-eslint/await-thenable": "error",
    "@typescript-eslint/consistent-type-assertions": "error",
    "@typescript-eslint/dot-notation": "error",
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"],
        "leadingUnderscore": "allow"
      },
      { "selector": "parameter", "format": ["camelCase"], "leadingUnderscore": "allow" },
      {
        "selector": "memberLike",
        "modifiers": ["private"],
        "format": ["camelCase"],
        "leadingUnderscore": "require"
      },
      { "selector": "typeLike", "format": ["PascalCase"] },
      { "selector": "typeParameter", "format": ["camelCase", "snake_case", "UPPER_CASE"] },
      { "selector": "objectLiteralProperty", "format": null },
      { "selector": "typeProperty", "format": null }
    ],
    "@typescript-eslint/no-empty-function": "error",
    "@typescript-eslint/no-empty-interface": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-for-in-array": "error",
    "@typescript-eslint/no-implied-eval": "error",
    "@typescript-eslint/no-magic-numbers": [
      "error",
      {
        "ignore": [0, 1, -1, 100],
        "ignoreReadonlyClassProperties": true,
        "ignoreEnums": true,
        "ignoreNumericLiteralTypes": true
      }
    ],
    "@typescript-eslint/no-misused-promises": "error",
    "@typescript-eslint/no-non-null-assertion": "error",
    "@typescript-eslint/no-unnecessary-type-assertion": "error",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/no-unsafe-call": "error",
    "@typescript-eslint/no-unsafe-member-access": "error",
    "@typescript-eslint/no-unsafe-return": "error",
    "@typescript-eslint/no-unused-vars": ["error", { "argsIgnorePattern": "^_" }],
    "@typescript-eslint/prefer-regexp-exec": "error",
    "@typescript-eslint/restrict-plus-operands": "error",
    "@typescript-eslint/restrict-template-expressions": "error",
    "@typescript-eslint/unbound-method": "error",
    "@typescript-eslint/unified-signatures": "error",
    "camelcase": "off",
    "curly": "error",
    "eqeqeq": "error",
    "import/exports-last": "error",
    "import/first": "error",
    "import/group-exports": "error",
    "import/no-default-export": "error",
    "import/no-duplicates": "error",
    "import/no-named-default": "error",
    "import/order": "error",
    "no-array-constructor": "error",
    "no-console": "error",
    "no-constant-condition": ["error", { "checkLoops": false }],
    "no-else-return": "error",
    "no-loop-func": "error",
    "no-plusplus": "error",
    "no-redeclare": "error",
    "no-undef-init": "error",
    "no-undef": "error",
    "no-unused-expressions": "error",
    "no-var": "error",
    "prefer-const": "error",
    "quote-props": ["error", "consistent-as-needed"],
    "radix": "error",
    "yoda": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react-hooks/rules-of-hooks": "error",
    "react/jsx-boolean-value": "error",
    "react/jsx-filename-extension": ["error", { "extensions": [".tsx"] }],
    "react/jsx-key": "error",
    "react/jsx-no-duplicate-props": "error",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-redundant-should-component-update": "error",
    "react/no-unknown-property": "error",
    "react/no-unused-state": "error",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "error",
    "react/require-default-props": "off",
    "react/require-render-return": "error"
  }
}
